###Script para alluviales
library(alluvial)
install.packages("alluvial")
install.packages("plyr")
install.packages("biobase")
install.packages("Biobase")
install.packages("GEOquery")
source("https://bioconductor.org/biocLite.R")
biocLite("GEOquery")
install.packages("XML")
install.packages("xml2")
install.packages("xml2")
install.packages("XML")
biocLite("GEOquery")
install.packages("RCurl")
install.packages("rCUR")
install.packages("curl")
install.packages("RCurl")
biocLite("GEOquery")
biocLite("GEOquery")
install.packages("ggplot2")
################################################################
#   Boxplot for selected GEO samples
library(Biobase)
library(GEOquery)
vignette(GEOquery)
vignette("GEOquery")
#A continuación se cargará la librería 'ggplot' para hacer gráficos
library("ggplot2")
library("ggplot2")
library("reshape2")
library("alluvial")
library("dplyr")
install.packages("VennDiagram")
help(VennDiagram)
##A CONTINUACIÓN, UN SCRIPT QUE REALIZA DIAGRAMAS DE VENN, ESPECÍFICAMENTE, PARA
##POIMORFISMOS RELACIONADOS CON TRASTORNOS DE INTERÉS
library(VennDiagram)
vignette("VennDiagram")
help("VennDiagram")
install.packages("venneuler")
install.packages("rJava")
install.packages("rJava")
install.packages("venneuler")
##A CONTINUACIÓN, UN SCRIPT QUE REALIZA DIAGRAMAS DE VENN, ESPECÍFICAMENTE, PARA
##POIMORFISMOS RELACIONADOS CON TRASTORNOS DE INTERÉS
library(venneuler)
install.packages(rJava)
install.packages("rJava")
install.packages("rJava")
##A CONTINUACIÓN, UN SCRIPT QUE REALIZA DIAGRAMAS DE VENN, ESPECÍFICAMENTE, PARA
##POIMORFISMOS RELACIONADOS CON TRASTORNOS DE INTERÉS
library(venneuler)
library(rJava)
library("rJava")
library(rJava)
##A CONTINUACIÓN, UN SCRIPT QUE REALIZA DIAGRAMAS DE VENN, ESPECÍFICAMENTE, PARA
##POIMORFISMOS RELACIONADOS CON TRASTORNOS DE INTERÉS
library(venneuler)
dyn.load(file, DLLpath = DLLpath, ...)
installed.packages()
View(installed.packages())
library(rJava)
##A CONTINUACIÓN, UN SCRIPT QUE REALIZA DIAGRAMAS DE VENN, ESPECÍFICAMENTE, PARA
##POIMORFISMOS RELACIONADOS CON TRASTORNOS DE INTERÉS
library(venneuler)
library(venneuler)
MyVenn <- venneuler(c(A=74344,B=33197,C=26464,D=148531,"A&B"=11797,
"A&C"=9004,"B&C"=6056,"A&B&C"=2172,"A&D"=0,"A&D"=0,"B&D"=0,"C&D"=0))
MyVenn$labels <- c("A\n22","B\n7","C\n5","D\n58")
plot(MyVenn)
text(0.59,0.52,"1")
text(0.535,0.51,"3")
text(0.60,0.57,"2")
text(0.64,0.48,"4")
library(VennDiagram)
vignette("VennDiagram")
help("VennDiagram")
help("VennDiagram-package")
vignette("VennDiagram-package")
# A simple two-set diagram
venn.plot <- draw.pairwise.venn(100, 70, 30, c("First", "Second"));
grid.draw(venn.plot);
grid.newpage();
# A simple two-set diagram
venn.plot <- draw.pairwise.venn(100, 70, 30, c("First", "Second"));
grid.draw(venn.plot);
grid.newpage();
# A simple two-set diagram
venn.plot <- draw.pairwise.venn(100, 70, 30, c("First", "Second"));
# A simple single-set diagram
cardiome <- letters[1:10]
superset <- letters[8:24]
overlap <- calculate.overlap(
x = list(
"Cardiome" = cardiome,
"SuperSet" = superset
)
)
overlap <- calculate.overlap(
x = list(
"Cardiome" = cardiome,
"SuperSet" = superset
)
);
# A simple two-set diagram
venn.plot <- draw.pairwise.venn(100, 70, 30, c("First", "Second"));
grid.draw(venn.plot);
grid.newpage();
venn.plot <- venn.diagram(
x = list(
A = 1:150,
B = 151:250
),
filename = "2-3_special_case_pairwise-exclusion.tiff",
cex = 2.5,
cat.cex = 2.5,
cat.pos = c(0, 0),
cat.dist = 0.05
);
venn.plot
venn.plot <- venn.diagram(
x = list(
A = 1:150,
B = 151:250
),
filename = "2-3_special_case_pairwise-exclusion.tiff",
cex = 2.5,
cat.cex = 2.5,
cat.pos = c(0, 0),
cat.dist = 0.05
)
venn.diagram(
x = list(
A = 1:150,
B = 151:250
),
filename = "2-3_special_case_pairwise-exclusion.tiff",
cex = 2.5,
cat.cex = 2.5,
cat.pos = c(0, 0),
cat.dist = 0.05
)
venn.plot <- venn.diagram(
list(A = 1:150, B = 121:170),
"Venn_2set_simple.tiff"
);
# A simple single-set diagram
# A simple three-set diagram
venn.plot <- draw.triple.venn(65, 75, 85,
35, 15, 25, 5, c("First", "Second", "Third"));
# A simple single-set diagram
# A simple three-set diagram
venn.plot <- draw.triple.venn(65, 75, 85,
35, 15, 25, 5, c("A", "B", "C"));
grid.draw(venn.plot);
grid.newpage()
# A simple single-set diagram
# A simple three-set diagram
venn.plot <- draw.triple.venn(65, 75, 85,
35, 15, 25, 5, c("A", "B", "C"));
vignette("venn.plot")
help("venn.plot")
source("http://dl.dropbox.com/u/66281/0_Permanent/qqman.r")
source("http://dl.dropbox.com/u/66281/0_Permanent/qqman.r")
library(data.table)
library(qqman)
setwd("~/Manhattans_for_OCD_and_SUD/Lista_de_SNPs_GWASdb_para_SUD/")
#View(gwasResults) #DATS DE PRUEBA
GWAS_FOR_ADDICTIONS.DF<-read.csv("data/SNPS_FOR_ADDICTIONS.csv", header = T)
man_tcs<-subset(GWAS_FOR_ADDICTIONS.DF, select = c(snpid, chr, pos, pval))
colnames(man_tcs) <- c("SNP", "CHR", "BP", "P")
manhattan(subset(man_tcs, P>=1e-100), ylim= c(0,60))
#A CONTINUACIÓN, SE RESALTARÁN LOS POLIMORFISMOS MÁS SIGNIFICATIVOS PARA ESTE
#TRASTORNO/FENOTIPO
P8<-subset(man_tcs, P<=1e-8)
P8<-as.vector(P8$SNP)
#UNA VEZ GENERADA LA LISTA DE POLIMORFISMOS RELEVANTES, SE PROCEDERÁ A GRAFICAR
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8,
annotatePval = 1e-8)
#UNA VEZ GENERADA LA LISTA DE POLIMORFISMOS RELEVANTES, SE PROCEDERÁ A GRAFICAR
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8)
View(as.table(P8))
View(P8)
#A CONTINUACIÓN, SE RESALTARÁN LOS POLIMORFISMOS MÁS SIGNIFICATIVOS PARA ESTE
#TRASTORNO/FENOTIPO
P8<-subset(man_tcs, P<=1e-8)
P8v<-as.vector(P8$SNP)
#UNA VEZ GENERADA LA LISTA DE POLIMORFISMOS RELEVANTES, SE PROCEDERÁ A GRAFICAR
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8v)
View(P8)
table(P8)
table(P8$SNP)
View(table(P8$SNP))
View(P8)
#UNA VEZ GENERADA LA LISTA DE POLIMORFISMOS RELEVANTES, SE PROCEDERÁ A GRAFICAR
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8v,
annotatePval = 1e-80)
#UNA VEZ GENERADA LA LISTA DE POLIMORFISMOS RELEVANTES, SE PROCEDERÁ A GRAFICAR
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8v,
annotatePval = 1e-8)
##GUARDANDO LA GRÁFICA
pdf(file="results/SNPs_for_TCS.pdf", width = 940.9090576171875,
height = 529.0908813476563)
# Paso 2. Crear la figura en el archivo
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8,
annotatePval = 1e-8)
# Paso 2. Crear la figura en el archivo
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8v,
annotatePval = 1e-8)
# Paso 3. Cerrar el archivo
dev.off()
##GUARDANDO LA GRÁFICA
pdf(file="results/SNPs_for_TCS.pdf", width =800 ,
height = 600)
# Paso 2. Crear la figura en el archivo
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8v,
annotatePval = 1e-8)
# Paso 3. Cerrar el archivo
dev.off()
##GUARDANDO LA GRÁFICA
pdf(file="results/SNPs_for_TCS.pdf")
# Paso 2. Crear la figura en el archivo
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8v,
annotatePval = 1e-8)
# Paso 3. Cerrar el archivo
dev.off()
##GUARDANDO LA GRÁFICA
pdf(file="results/SNPs_for_TCS.pdf", width = 9)
# Paso 2. Crear la figura en el archivo
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8v,
annotatePval = 1e-8)
# Paso 3. Cerrar el archivo
dev.off()
##GUARDANDO LA GRÁFICA
pdf(file="results/SNPs_for_TCS.pdf", width = 13)
# Paso 2. Crear la figura en el archivo
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8v,
annotatePval = 1e-8)
# Paso 3. Cerrar el archivo
dev.off()
vignette(qqman)
vignette("qqman")
library(data.table)
library(qqman)
#View(gwasResults) #DATS DE PRUEBA
GWAS_FOR_ADDICTIONS.DF<-read.csv("data/SNPS_FOR_ADDICTIONS.csv", header = T)
man_tcs<-subset(GWAS_FOR_ADDICTIONS.DF, select = c(snpid, chr, pos, pval))
colnames(man_tcs) <- c("SNP", "CHR", "BP", "P")
manhattan(subset(man_tcs, P>=1e-100), ylim= c(0,60))
#A CONTINUACIÓN, SE RESALTARÁN LOS POLIMORFISMOS MÁS SIGNIFICATIVOS PARA ESTE
#TRASTORNO/FENOTIPO
P8<-subset(man_tcs, P<=1e-8)
P8v<-as.vector(P8$SNP)
table(P8)
summary(P8)
summary(P8$SNP, maxsum = 7)
summary(P8$SNP, maxsum = 11)
P8<-as.table(P8)
P8<-table(P8)
View(P8)
order(P8$P, decreasing = T)
order(P8[P8$P,], decreasing = T)
P8[P8$P,]
order(P8, decreasing = T)
View(order(P8, decreasing = T))
P8[with(P8, order(P8$P, decreasing = T)),]
View(P8[with(P8, order(P8$P, decreasing = T)),])
View(P8[with(P8, order(P8$P, decreasing =F)),])
P8<-P8[with(P8, order(P8$P, decreasing =F)),]
View(P8)
annoted_rs<-P8$SNP[1:20, ]
annoted_rs<-P8$SNP[1:20,]
annoted_rs<-P8[1:20,]
View(annoted_rs)
View(annoted_rs)
annoted_rs<-P8$SNP[1:20]
annoted_rs
annoted_rs<-as.vector(P8$SNP[1:20])
annoted_rs
P8<-P8[with(P8, order(P8$P, decreasing =F)),]
annoted_rs<-as.vector(P8$SNP[1:20])
annoted_rs
View(P8)
#UNA VEZ GENERADA LA LISTA DE POLIMORFISMOS RELEVANTES, SE PROCEDERÁ A GRAFICAR
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8v)
##GUARDANDO LA GRÁFICA
pdf(file="results/SNPs_for_TCS.pdf", width = 13)
# Paso 2. Crear la figura en el archivo
manhattan(subset(man_tcs, P>=1e-100),
main= "SNPs en fenotipos relacionados con TCS", highlight = P8v)
# Paso 3. Cerrar el archivo
dev.off()
View(P8)
write.csv(P8, "results/P8txt")
