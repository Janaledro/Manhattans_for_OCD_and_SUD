###Script para alluviales
library(alluvial)
install.packages("alluvial")
install.packages("plyr")
install.packages("biobase")
install.packages("Biobase")
install.packages("GEOquery")
source("https://bioconductor.org/biocLite.R")
biocLite("GEOquery")
install.packages("XML")
install.packages("xml2")
install.packages("xml2")
install.packages("XML")
biocLite("GEOquery")
install.packages("RCurl")
install.packages("rCUR")
install.packages("curl")
install.packages("RCurl")
biocLite("GEOquery")
biocLite("GEOquery")
install.packages("ggplot2")
################################################################
#   Boxplot for selected GEO samples
library(Biobase)
library(GEOquery)
vignette(GEOquery)
vignette("GEOquery")
#A continuación se cargará la librería 'ggplot' para hacer gráficos
library("ggplot2")
library("ggplot2")
library("reshape2")
library("alluvial")
library("dplyr")
for(i in length(pmid)){
message(paste0("Operando sobre la línea " i))
INTERMEDIATE_DATA_FRAME.DF<-FINALDF.DF[,]
rsids<-grep(pmid[i], TCS.DF$pubmedid, fixed = T)
INTERMEDIATE_DATA_FRAME.DF$PUBMED_ID[i]<-unlist(pmid[i])
rbind(INTERMEDIATE_DATA_FRAME.DF, FINALDF.DF)
}
for(i in length(pmid)){
message(paste0("Operando sobre la línea ", i))
INTERMEDIATE_DATA_FRAME.DF<-FINALDF.DF[,]
rsids<-grep(pmid[i], TCS.DF$pubmedid, fixed = T)
INTERMEDIATE_DATA_FRAME.DF$PUBMED_ID[i]<-unlist(pmid[i])
rbind(INTERMEDIATE_DATA_FRAME.DF, FINALDF.DF)
}
setwd("~/Manhattans_for_OCD_and_SUD/Lista_de_SNPs_GWASdb_para_SUD/")
TCS.DF<-read.csv("data/SNPS_FOR_ADDICTIONS.csv", header = T)
pubmed_id<-TCS.DF$pubmedid
A<-table(pubmed_id)
pmid<-unique(TCS.DF$pubmedid)
#A CONTINUACIÓN UN LOOP FOR PARA GENERAR LA TABLA DADA POR LOS ESTUDIOS
FINALDF.DF<-data.frame(
matrix("", nrow = 96, ncol = 3))
colnames(FINALDF.DF)<-c("PUBMED_ID", "SNP_ID", "GENES")
FINALDF.DF$PUBMED_ID<-unlist(pmid)
trying<-grep(pattern = 21357676, TCS.DF$pubmedid, ignore.case = T)
for(i in length(pmid)){
message(paste0("Operando sobre la línea ", i))
INTERMEDIATE_DATA_FRAME.DF<-FINALDF.DF[,]
rsids<-grep(pmid[i], TCS.DF$pubmedid, fixed = T)
INTERMEDIATE_DATA_FRAME.DF$PUBMED_ID[i]<-unlist(pmid[i])
rbind(INTERMEDIATE_DATA_FRAME.DF, FINALDF.DF)
}
View(FINALDF.DF)
View(INTERMEDIATE_DATA_FRAME.DF)
trying<-grep(pattern = 21357676, TCS.DF$pubmedid, ignore.case = T)
View(FINALDF.DF)
trying<-grep(pattern = 1, TCS.DF$pubmedid, ignore.case = T)
trying<-grep(pattern = 1, TCS.DF$pubmedid, ignore.case = T, fixed = T)
trying<-grep(pattern = 1, TCS.DF$pubmedid, ignore.case = T, value = T)
trying<-grep(pattern = "1", TCS.DF$pubmedid, ignore.case = T)
trying<-grep(pattern = "1", TCS.DF$pubmedid, ignore.case = T)
trying<-grep(pattern = " 1 ", TCS.DF$pubmedid, ignore.case = T)
trying<-grep(pattern = "1", TCS.DF$pubmedid)
trying<-TCS.DF[grep(pattern = 1, ignore.case = T)]
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid,ignore.case = T)]
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid,ignore.case = T), ]
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid,ignore.case = T, value = F), ]
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid,ignore.case = T, value = T), ]
table(TCS.DF$pubmedid)
View(table(TCS.DF$pubmedid))
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid, ignore.case = T, fixed = T), ]
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid, ignore.case = F, fixed = T), ]
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid, ignore.case = T, fixed = T), ]
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid, ignore.case = T, fixed = T, value = T), ]
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid, fixed = T, value = T), ]
rm(trying)
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid, fixed = T, value = T), ]
for (i in 1:nrow(TCS.DF)) {
trying<-grep(1, TCS.DF$pubmedid[i], value = T, fixed = T)
}
trying<-grep(1, TCS.DF$pubmedid[i], fixed = T)
for (i in 1:nrow(TCS.DF)) {
trying<-grep(1, TCS.DF$pubmedid[i], fixed = T)
}
for (i in 1:nrow(TCS.DF)) {
grep(1, TCS.DF$pubmedid[i], fixed = T)
}
for (i in 1:nrow(TCS.DF)) {
indice<-grep(1, TCS.DF$pubmedid[i], fixed = T)
}
trying<-TCS.DF[grep(pattern = 1, TCS.DF$pubmedid, fixed = T, useBytes = T), ]
View(trying)
trying<-grep(pattern = "\\b1\\b", TCS.DF$pubmedid)
trying
View(TCS.DF)
rsids<-TCS.DF$snpid[trying]
rsids
rm("FINALDF.DF")
FINAL.DF<-subset(TCS.DF, pubmedid, snpid, genesymbol)
FINAL.DF<-subset(TCS.DF, "pubmedid", "snpid", "genesymbol")
FINAL.DF<-subset(TCS.DF, subset = c("pubmedid", "snpid", "genesymbol", ))
FINAL.DF<-subset(TCS.DF, subset = c("pubmedid", "snpid", "genesymbol"))
FINAL.DF<-data.frame(pubmedid = NA,
snpi=NA,
genesymbol=NA)
View(FINAL.DF)
FINAL.DF<-data.frame(pubmed_id = NA,
snpid=NA,
gene_symbol=NA)
FINALDF.DF$pubmed_id<-unlist(pmid)
FINAL.DF$pubmed_id<-unlist(pmid)
#A CONTINUACIÓN UN LOOP FOR PARA GENERAR LA TABLA DADA POR LOS ESTUDIOS
FINAL.DF<-data.frame(
matrix("", nrow = 96, ncol = 3))
colnames(FINALDF.DF)<-c("PUBMED_ID", "SNP_ID", "GENES")
colnames(FINAL.DF)<-c("PUBMED_ID", "SNP_ID", "GENES")
FINAL.DF$PUBMED_ID<-unlist(pmid)
View(FINAL.DF)
for (i in length(pmid)) {
indice<-grep("\\bi\\b", TCS.DF$pubmedid[i], fixed = T)
}
indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
pmid
for (i in length(pmid)) {
message(paste0("estoy buscando la información del estudio " i))
#indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
}
for (i in length(pmid)) {
message(paste0("estoy buscando la información del estudio " i))
#indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
}
message(paste0("estoy buscando la información del estudio " pmid[i]))
message(paste0("estoy buscando la información del estudio ", pmid[i]))
message(paste0("estoy buscando la información del estudio ", i))
message(paste0("estoy buscando la información del estudio ", pmid[i]))
for (i in length(pmid)) {
message(paste0("estoy buscando la información del estudio ", pmid[i]))
#indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
}
for (i in length(pmid)) {
message(paste0("estoy buscando la información del estudio ", pmid[i]))
#indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
}
pmid
length(pmid)
for(i in length(pmid)) {
message(paste0("Estoy buscando la información del estudio ", pmid[i]))
#indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
}
for(i in pmid) {
message(paste0("Estoy buscando la información del estudio ", pmid[i]))
#indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
}
for(i in pmid) {
message(paste0("Estoy buscando la información del estudio ", pmid[i]))
#indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
}
View(table(pmid))
for(i in length(pmid)) {
message(paste0("Estoy buscando la información del estudio ", pmid[i]))
#indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
}
for(i in length(pmid)) {
message(paste0("Estoy buscando la información del estudio ", pmid[i]))
indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
}
for(i in length(pmid)) {
message(paste0("Estoy buscando la información del estudio ", pmid[i]))
indice<-grep(i, TCS.DF$pubmedid[i], fixed = T)
}
